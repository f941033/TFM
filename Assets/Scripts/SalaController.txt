using UnityEngine;
using UnityEngine.Tilemaps;

public class SalaController : MonoBehaviour
{
    public Tilemap tilemap;
    Color originalColor;
    public bool estaLibre = false;
    //public GameObject[] salasContiguas;
    public GameObject[] wayPoints;
    public GameObject[] removeWayPoints;
    public SpawnEnemies spawnEnemiesController;
    //bool cartaAbrirSala = false;
    public GameManager gm;

    static GameObject[] salas;
    static int indexSala;
    GameObject parent;
    MerchantUI merchant;

    // Start is called once before the first execution of Update after the MonoBehaviour is created
    void Start()
    {
        merchant = FindAnyObjectByType<MerchantUI>();
        parent = gameObject.GetComponentInParent<GameObject>();
        originalColor = tilemap.color;
        if (gameObject.tag == "salaCentral")
        {
            estaLibre = true;
        }
        if (salas != null) return;
        else
        {
            salas = GameObject.FindGameObjectsWithTag("ColliderSala");
            foreach (var sala in salas)
            {
                sala.SetActive(false);
            }
            indexSala = 0;
        }

    }

    // Update is called once per frame
    void Update()
    {

    }

    private void OnMouseDown()
    {
        if (gm.hasKey && parent == salas[indexSala])
        {
            gm.hasKey = false;
            merchant.DeactiveKey();
            estaLibre = true;

            foreach (var item in parent.GetComponentsInChildren<SalaController>())
            {
                item.gameObject.SetActive(false);
            }
            indexSala++;

            spawnEnemiesController.AddWayPoints(wayPoints, removeWayPoints);
        }

    }

    private void OnMouseEnter()
    {
        if (gm.hasKey && parent == salas[indexSala])
        {
            foreach (var item in parent.GetComponentsInChildren<SalaController>())
            {
                item.tilemap.color = Color.red; ;
            }
        }

    }

    private void OnMouseExit()
    {
        foreach (var item in parent.GetComponentsInChildren<SalaController>())
        {
            item.tilemap.color = originalColor;
        }

    }

    //bool esSalaContigua()
    //{
    //    foreach (GameObject sala in salasContiguas)
    //    {
    //        if (sala.GetComponent<SalaController>().estaLibre)
    //        {
    //            return true;
    //        }
    //    }
    //    return false;
    //}

    //public void TengoCartaAbrirSala()
    //{
    //    cartaAbrirSala = true;
    //}
}
